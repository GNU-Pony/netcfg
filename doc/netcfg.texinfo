\input texinfo   @c -*-texinfo-*-

@c %**start of header
@setfilename netcfg.info
@settitle netcfg
@afourpaper
@documentencoding UTF-8
@documentlanguage en
@finalout
@c %**end of header



@dircategory Networking
@direntry
* netcfg: (netcfg).                  Network configuration and profile scripts
@end direntry


@copying
Copyright @copyright{} 2013 Mattias Andrée, Jouke Witteveen, et al.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
Texts. A copy of the license is included in the section entitled
``GNU Free Documentation License''.
@end quotation
@end copying

@ifnottex
@node Top
@top netcfg -- Network configuration and profile scripts
@insertcopying
@end ifnottex

@titlepage
@title netcfg
@subtitle Network configuration and profile scripts
@author by netcfg authors

@page
@vskip 0pt plus 1filll
@insertcopying
@page
@end titlepage

@contents



@menu
* Overview::                        Brief overview of @command{netcfg}.
* Invoking::                        Invocation of @command{netcfg}.
* Files::                           Files related to @command{netcfg}.
* GNU Free Documentation License::  Copying and sharing this manual.
@end menu



@node Overview
@chapter Overview

@command{netcfg} is used to configure and manage network connections via profiles.
It has pluggable support for a range of connection types, such as wireless,
ethernet, ppp. It is also capable of starting/stopping many to one connections,
that is, multiple connections within the same profile, optionally with bonding.

It may be run at boot, by  adding @command{net-profiles} to @var{DAEMONS} in
@file{/etc/rc.conf}, or, on systemd systems, by by enabling the @command{netcfg}
systemd service. After boot time, it may be used to start profiles, simply
by passing only the profile name.

When run without options, netcfg profile is equivalent to @command{netcfg -u}
profile.



@node Invoking
@chapter Invoking

The format for invoking @command{netcfg} is @code{netcfg ([option...] | profile)}.
@command{netcfg} recognised the following options.


@table @option
@item -l
@itemx -list
List all available profiles.

@item current
Report currently running profiles.

@item -c
@itemx check-iface @var{profile}
Start the specified profile, only if it’s interface is not currently up.

@item -u
@itemx up @var{profile}
Start the specified profile.

@item -r
@itemx reconnect @var{profile}
Disconnect and reconnect the specified profile.

@item -R
@itemx iface-recon @var{interface}
Reconnect profile active on specified interface.

@item -d
@itemx down @var{profile}
Stop the specified profile.

@item -D
@itemx iface-down @var{interface}
Stop the profile up on the specified interface.

@item -a
@itemx all-down
Stop all connected profiles.

@item all-suspend
Suspend and store the name of all active profiles.

@item all-resume
Reconnect any profiles that have been suspended.

@item -v
@itemx --version
Display version information and exit.

@item -h
@itemx --help
Display help message and exit.
@end table


Set the environment variable @var{NETCFG_DEBUG} to @code{1}
for activate debug output.



@node Files
@chapter Files

@table @file
@item /etc/conf.d/netcfg
Parameters for startup.

@item /etc/network.d/
User-defined profiles.

@item /usr/lib/network/connections/
Currently installed network profile types.

@item /etc/network.d/examples/
Example profiles.

@item /usr/share/doc/netcfg/contrib/
Inspirational scripts.
@end table



@node GNU Free Documentation License
@appendix GNU Free Documentation License
@include fdl.texinfo

@bye

